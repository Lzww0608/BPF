


#include <net/sock.h>
#include <linux/socket.h>


kprobe:tcp_set_state
{

    //printf("%8s %6s %16s", "TIME", "PID", "COMM");
    //printf("%19s:%5s  %16s:%5s %s\n", "SADDR", "SPORT", "DADDR", "DPORT", "DURms");
	$sk = (struct sock*)arg0;
	$newstate = arg1;

	if ($newstate <= TCP_SYN_RECV) { // begin
		@birth[$sk] = nsecs;
	}

	if ($newstate == TCP_CLOSE ) { // end
		$dur = (nsecs - @birth[$sk]) / 1e6;
		$inet_family = $sk->__sk_common.skc_family;

        	if ($inet_family == AF_INET) {

                	$daddr = ntop($sk->__sk_common.skc_daddr);
                	$saddr = ntop($sk->__sk_common.skc_rcv_saddr);

        	}

        	$dport = $sk->__sk_common.skc_dport;
        	$lport = $sk->__sk_common.skc_num;

        	// 手动字节序转换
	        $dport = (($dport & 0xff) << 8) | (($dport & 0xff00) >> 8);

        	time("%H:%M:%S ");
        	printf("%6d %16s", pid, comm);
        	printf("%19s:%5d  %16s:%5d %d\n", $saddr, $lport, $daddr, $dport, $dur);	
		
	}
	

}



